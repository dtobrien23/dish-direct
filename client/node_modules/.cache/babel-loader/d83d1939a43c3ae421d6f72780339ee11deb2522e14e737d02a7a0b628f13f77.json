{"ast":null,"code":"var _jsxFileName = \"/Users/deanobrien/Projects/dish-direct/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [recipeData, setRecipeData] = useState([{}]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [randomIndex, setRandomIndex] = useState();\n  function handleSearch() {\n    console.log(searchQuery);\n    fetch(\"/search\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: searchQuery\n      })\n    }).then(response => response.json()).then(data => {\n      setRecipeData(data);\n      console.log(data);\n      {\n        data.number > data.totalResults ? setRandomIndex(Math.floor(Math.random() * data.totalResults)) : setRandomIndex(Math.floor(Math.random() * data.number));\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), typeof recipeData.totalResults === \"undefined\" || recipeData.totalResults === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No recipe yet...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: recipeData.results[randomIndex].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: recipeData.results[randomIndex].image,\n        alt: \"Lovely food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mXdpmafxrYgEvnQGIhaZpWMOddw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","App","_s","recipeData","setRecipeData","searchQuery","setSearchQuery","randomIndex","setRandomIndex","handleSearch","console","log","fetch","method","headers","body","JSON","stringify","query","then","response","json","data","number","totalResults","Math","floor","random","children","fileName","_jsxFileName","lineNumber","columnNumber","results","title","src","image","alt","_c","$RefreshReg$"],"sources":["/Users/deanobrien/Projects/dish-direct/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./Navbar\";\n\nconst App = () => {\n  const [recipeData, setRecipeData] = useState([{}]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [randomIndex, setRandomIndex] = useState();\n\n  function handleSearch() {\n    console.log(searchQuery);\n    fetch(\"/search\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ query: searchQuery }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setRecipeData(data);\n        console.log(data);\n        {\n          data.number > data.totalResults\n            ? setRandomIndex(Math.floor(Math.random() * data.totalResults))\n            : setRandomIndex(Math.floor(Math.random() * data.number));\n        }\n      });\n  }\n\n  return (\n    <div>\n      <Navbar />\n      {typeof recipeData.totalResults === \"undefined\" ||\n      recipeData.totalResults === 0 ? (\n        <p>No recipe yet...</p>\n      ) : (\n        <div>\n          <p>{recipeData.results[randomIndex].title}</p>\n          <img src={recipeData.results[randomIndex].image} alt=\"Lovely food\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAEhD,SAASY,YAAYA,CAAA,EAAG;IACtBC,OAAO,CAACC,GAAG,CAACN,WAAW,CAAC;IACxBO,KAAK,CAAC,SAAS,EAAE;MACfC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK,EAAEb;MAAY,CAAC;IAC7C,CAAC,CAAC,CACCc,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdlB,aAAa,CAACkB,IAAI,CAAC;MACnBZ,OAAO,CAACC,GAAG,CAACW,IAAI,CAAC;MACjB;QACEA,IAAI,CAACC,MAAM,GAAGD,IAAI,CAACE,YAAY,GAC3BhB,cAAc,CAACiB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,IAAI,CAACE,YAAY,CAAC,CAAC,GAC7DhB,cAAc,CAACiB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,IAAI,CAACC,MAAM,CAAC,CAAC;MAC7D;IACF,CAAC,CAAC;EACN;EAEA,oBACEvB,OAAA;IAAA4B,QAAA,gBACE5B,OAAA,CAACF,MAAM;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACT,OAAO7B,UAAU,CAACqB,YAAY,KAAK,WAAW,IAC/CrB,UAAU,CAACqB,YAAY,KAAK,CAAC,gBAC3BxB,OAAA;MAAA4B,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEvBhC,OAAA;MAAA4B,QAAA,gBACE5B,OAAA;QAAA4B,QAAA,EAAIzB,UAAU,CAAC8B,OAAO,CAAC1B,WAAW,CAAC,CAAC2B;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9ChC,OAAA;QAAKmC,GAAG,EAAEhC,UAAU,CAAC8B,OAAO,CAAC1B,WAAW,CAAC,CAAC6B,KAAM;QAACC,GAAG,EAAC;MAAa;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAxCID,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AA0CT,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}